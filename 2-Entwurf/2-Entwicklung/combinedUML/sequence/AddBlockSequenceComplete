@startuml

participant ": BlockDragAndDropHandler" as BlockDragAndDropHandler
participant ": ButtonAction" as ButtonAction
participant ": BlockAction" as BlockAction
participant ": CommandManager" as CommandManager
participant "cmd : AddBlockToConfigCommand" as AddBlockToConfigCommand
participant ": MeasurementConfiguration" as MeasurementConfiguration
participant ": BuildingBlockDirectory" as BuildingBlockDirectory
participant ": PickUpPointViewFacades" as PickUpPointViewFacades

participant ": UpdateInterface" as UpdateInterface
participant ": ViewDirectoryInterface" as ViewDirectoryInterface
participant ": ConfigurationField" as ConfigurationField


participant "B1: BuildingBlock" as BuildingBlock
participant "V1: BuildingBlockView" as BuildingBlockView
activate BlockDragAndDropHandler

' Add Bloc

BlockDragAndDropHandler -> BlockDragAndDropHandler : blockWasMoved(id, x, y)
activate BlockDragAndDropHandler
BlockDragAndDropHandler -> BlockAction : blockPlaced(id, x, y)
activate BlockAction
'
' GUI Start
'
BlockAction --> AddBlockToConfigCommand : <<create>> AddBlockToConfigCommand(id)
activate AddBlockToConfigCommand
BlockAction -> CommandManager : runCommand(cmd)
activate CommandManager
CommandManager -> AddBlockToConfigCommand : execute()
'
' Model Start
'
AddBlockToConfigCommand -> MeasurementConfiguration : addBuildingBlock(id)
activate MeasurementConfiguration
MeasurementConfiguration -> MeasurementConfiguration : cloneInitBlock(id)
MeasurementConfiguration -> BuildingBlockDirectory : getConfigBuildingBlock(id)
activate BuildingBlock
MeasurementConfiguration <-- BuildingBlockDirectory: B1
MeasurementConfiguration <-- MeasurementConfiguration
MeasurementConfiguration -> MeasurementConfiguration: createConfigId(id)
MeasurementConfiguration <-- MeasurementConfiguration: configIdOfB1
MeasurementConfiguration -> BuildingBlockDirectory: addConfigBuildingBlock(configIdOfB1, B1)
MeasurementConfiguration <-- BuildingBlockDirectory: True
MeasurementConfiguration -> BuildingBlockDirectory: setUpdate(True)
MeasurementConfiguration <-- BuildingBlockDirectory: True
MeasurementConfiguration ->PickUpPointViewFacades: getUpdateInterfaces()
MeasurementConfiguration <-- PickUpPointViewFacades
MeasurementConfiguration -> UpdateInterface: updateConfig()
UpdateInterface -> ConfigurationField: update()





UpdateInterface <-- ConfigurationField
MeasurementConfiguration <-- UpdateInterface
AddBlockToConfigCommand <-- MeasurementConfiguration
deactivate MeasurementConfiguration
'
' Model End
'
CommandManager <-- AddBlockToConfigCommand
CommandManager -> AddBlockToConfigCommand : isUndoable()
activate CommandManager
CommandManager <-- AddBlockToConfigCommand : true
deactivate AddBlockToConfigCommand
CommandManager -> CommandManager : doneCommands.push(cmd)
deactivate CommandManager
BlockAction <-- CommandManager
deactivate CommandManager
'
' GUI End
'
BlockDragAndDropHandler <-- BlockAction
deactivate BlockAction
deactivate BlockDragAndDropHandler

ConfigurationField -> ViewDirectoryInterface: checkForUpdate()
ViewDirectoryInterface -> BuildingBlockDirectory: checkUpdate()
BuildingBlockDirectory --> ViewDirectoryInterface: True
ViewDirectoryInterface --> ConfigurationField: True
ConfigurationField -> ViewDirectoryInterface: getConfigBuildingBlock(configIdOfB1)
ViewDirectoryInterface -> BuildingBlockDirectory: getConfigBuildingBlock(configIdOfB1)
BuildingBlockDirectory --> ViewDirectoryInterface: B1
ViewDirectoryInterface --> ConfigurationField: B1
ConfigurationField -> ConfigurationField: add(B1)

ConfigurationField -> BuildingBlockView: <<create>>
BuildingBlockView --> ConfigurationField: V1


@enduml