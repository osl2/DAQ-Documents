Klassenimplementierung geschehen im Controller!

IButtonAction ..|> Controller.Command_Pattern.StartRunCommand
IButtonAction ..|> Controller.Command_Pattern.PauseRunCommand
IButtonAction ..|> Controller.Command_Pattern.ResumeRunCommand
IButtonAction ..|> Controller.Command_Pattern.StopRunCommand
IButtonAction ..|> Controller.Command_Pattern.ResetConfigCommand
IButtonAction ..|> Controller.Command_Pattern.LoadConfigCommand
IButtonAction ..|> Controller.Command_Pattern.SaveConfigCommand
IButtonAction ..|> Controller.Command_Pattern.CommandManager
IBlockAction ..|> Controller.Command_Pattern.AddBlockToConfigCommand
IBlockAction ..|> Controller.Command_Pattern.RemoveBlockFromConfigCommand
IBlockAction ..|> Controller.Command_Pattern.ModifyBlockInConfigCommand
IConnectionAction ..|> Controller.Command_Pattern.CreateChannelConnectionCommand
IConnectionAction ..|> Controller.Command_Pattern.ModifyChannelConnectionCommand
IConnectionAction ..|> Controller.Command_Pattern.DeleteChannelConnectionCommand


Interfaces, welche vom Cache angeboten werden und der View sie benutzt:

 interface IButtonAction {
 	+ startPressed(): boolean 
 	+ pausePressed(): boolean
	+ resumePressed(): boolean
 	+ resetPressed(): boolean
 	+ saveDataPressed(): boolean
 	+ saveRepresentationPressed(): boolean
 	+ saveConfigurationPressed(): boolean
 	+ undoPressed(): void
 	+ redoPressed(): void
	}
 
 interface IBlockAction {
 	+ blockPlaced(id: String, xCor: double, yCor: double): boolean
 	+ blockMoved(id String, xCor: double, yCor: double): boolean
 	+ blockRemoved(id: String): boolean
	}
 
 interface IConnectionAction {
 
 	+ connectionAdded(channelId1: int, channelId2: int): boolean
 	+ connectionRemoved(channelId1: int, channelId2: int): void
 	+ blockAndChannelsRemoved(id: String): void
	}